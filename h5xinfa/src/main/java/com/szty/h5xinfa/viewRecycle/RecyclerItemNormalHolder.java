package com.szty.h5xinfa.viewRecycle;import android.content.Context;import android.graphics.Bitmap;import android.media.MediaMetadataRetriever;import android.net.Uri;import android.util.Log;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import com.bumptech.glide.Glide;import com.shuyu.gsyvideoplayer.builder.GSYVideoOptionBuilder;import com.shuyu.gsyvideoplayer.listener.GSYSampleCallBack;import com.shuyu.gsyvideoplayer.video.StandardGSYVideoPlayer;import com.szty.h5xinfa.R;import com.szty.h5xinfa.ui.IndexActivity;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import java.util.HashMap;/** * @author Ly */public class RecyclerItemNormalHolder extends RecyclerItemBaseHolder {    public final static String TAG = "RecyclerItemNormalHold";    protected Context context = null;    SampleVideo sampleVideo;    ImageView ivImg;    ImageView thumbIv;    GSYVideoOptionBuilder gsyVideoOptionBuilder;    public RecyclerItemNormalHolder(Context context, View v) {        super(v);        this.context = context;        sampleVideo = v.findViewById(R.id.video_player);        ivImg = v.findViewById(R.id.iv_item);        ivImg.setScaleType(ImageView.ScaleType.FIT_XY);        //设置封面图        thumbIv = new ImageView(context);        gsyVideoOptionBuilder = new GSYVideoOptionBuilder();    }    public void onBind(boolean isOne, final int position, String url, IndexActivity.PlayCompleteCallBack callBack) {        if (thumbIv.getParent() != null) {            ViewGroup viewGroup = (ViewGroup) thumbIv.getParent();            viewGroup.removeView(thumbIv);        }        //显示视频的界面        if (url.contains(".mp4")) {            sampleVideo.setVisibility(View.VISIBLE);            ivImg.setVisibility(View.GONE);            displayVideo(isOne, position, url, callBack);        }//显示图片的界面        else {            sampleVideo.setVisibility(View.GONE);            ivImg.setVisibility(View.VISIBLE);            File file = new File(url);            if (file.exists()) {                Glide.with(context).load(url).into(ivImg);            } else {                Glide.with(context).load(R.mipmap.image_empty).into(ivImg);            }        }    }    /**     * 显示图文混播的方法     *     * @param position     * @param url     */    private void displayVideo(boolean isOne, int position, String url, IndexActivity.PlayCompleteCallBack callBack) {        thumbIv.setScaleType(ImageView.ScaleType.CENTER_CROP);        Log.i(TAG, "displayVideo: url ... "+url);        Uri uri = Uri.parse(url);        String path = uri.getPath();        Log.i(TAG,"path ... "+path);//        Bitmap bitmap = BaseUtils.getLocalVideoBitmap(context,uri);//        Bitmap bitmap = VideoUtils.getLocalVideoThumbnail(path);//        if (bitmap!=null) {//            //增加封面//            ImageView imageView = new ImageView(context);//            imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);//            imageView.setImageBitmap(bitmap);//            sampleVideo.setThumbImageView(imageView);//        }        sampleVideo.setLooping(false);        sampleVideo.setPlayTag(TAG);        sampleVideo.setPlayPosition(position);        //获取自动播放完毕的接口        gsyVideoOptionBuilder.setUrl(url).setVideoAllCallBack(new GSYSampleCallBack() {            @Override            public void onAutoComplete(String url, Object... objects) {                if (callBack != null) {                    callBack.playComplete(position);                }            }        }).build(sampleVideo);        if (position == 0) {            if (isOne) {                sampleVideo.setLooping(true);            }            sampleVideo.startPlayLogic();        }    }    /**     * 全屏幕按键处理     */    private void resolveFullBtn(final StandardGSYVideoPlayer standardGSYVideoPlayer) {        standardGSYVideoPlayer.startWindowFullscreen(context, true, true);    }    /**     * 给出url，获取视频的第一帧     */    static String getVideoThumbnail(String url, String name) {        Bitmap bitmap = null;        //MediaMetadataRetriever 是android中定义好的一个类，提供了统一        //的接口，用于从输入的媒体文件中取得帧和元数据；        MediaMetadataRetriever retriever = new MediaMetadataRetriever();        try {            //根据文件路径获取缩略图            retriever.setDataSource(url, new HashMap());            //获得第一帧图片            bitmap = retriever.getFrameAtTime();        } catch (IllegalArgumentException e) {            e.printStackTrace();        } finally {            retriever.release();        }        return saveBitmap(bitmap, name);    }    /**     * 获取本地视频的第一帧     */    static String getLocalVideoThumbnail(String filePath, String name) {        Bitmap bitmap = null;        //MediaMetadataRetriever 是android中定义好的一个类，提供了统一        //的接口，用于从输入的媒体文件中取得帧和元数据；        MediaMetadataRetriever retriever = new MediaMetadataRetriever();        try {            //根据文件路径获取缩略图            retriever.setDataSource(filePath);            //获得第一帧图片            bitmap = retriever.getFrameAtTime();        } catch (IllegalArgumentException e) {            e.printStackTrace();        } finally {            retriever.release();        }        return saveBitmap(bitmap, name);    }    /**     * 保存方法     */    private static String saveBitmap(Bitmap bitmap, String picName) {        String path = "";        File file = new File("/sdcard/ys", picName);        if (!file.exists())            file.mkdir();        try {            FileOutputStream out = new FileOutputStream(file);            bitmap.compress(Bitmap.CompressFormat.PNG, 90, out);            out.flush();            out.close();            path = file.getAbsolutePath();        } catch (IOException e) {            e.printStackTrace();        }        return path;    }}