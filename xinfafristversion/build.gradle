apply plugin: 'com.android.application'

android {

    signingConfigs {
        release {
            keyAlias project.KS_ALIAS
            keyPassword project.KS_PASSWORD
            storeFile file(KS_FILE_PATH)
            storePassword project.KS_STORE_PASSWORD
        }
        debug {
            keyAlias project.KS_ALIAS
            keyPassword project.KS_PASSWORD
            storeFile file(KS_FILE_PATH)
            storePassword project.KS_STORE_PASSWORD
        }
    }

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId "com.jzl.xinfafristversion"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 100
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        ndk {

            //APP的build.gradle设置支持的SO库架构

            abiFilters 'armeabi', 'armeabi-v7a', 'x86'
        }
        //添加如下配置就OK了
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
        aaptOptions {
            cruncherEnabled = false
            useNewCruncher = false
        }
        dexOptions {
            javaMaxHeapSize "4g"
            //Bugly 热更新 推荐
            jumboMode = true
        }
        //程序在buid的时候，会执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉
        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }
        //这里是配置JNI的引用地址，也就是引用.so文件
        sourceSets {
            main { jni.srcDirs = [] }
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }
    buildTypes {
        release {
            //是否启用混淆
            minifyEnabled true
            //是否清理无用资源
            shrinkResources true
            //是否启用zipAlign压缩
            zipAlignEnabled true

            buildConfigField "boolean", "API_ENV", "true"     //正式环境
            buildConfigField "boolean", "LOG_DEBUG", "false"  //不打印log
            signingConfig signingConfigs.release   //签名
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            shrinkResources false
            zipAlignEnabled false
            // 如果没有提供混淆规则文件，则设置默认的混淆规则文件（SDK/tools/proguard/proguard-android.txt）
            pseudoLocalesEnabled true
            minifyEnabled false

            buildConfigField "boolean", "API_ENV", "false"     //测试环境
            buildConfigField "boolean", "LOG_DEBUG", "true"  //打印log
            signingConfig signingConfigs.debug
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    configurations.all {
        resolutionStrategy.force rootProject.ext.dependencies["appcompat"]
    }
    implementation rootProject.ext.dependencies["appcompat"]
    implementation project(':remote')
    implementation project(':utillibrary')
    implementation rootProject.ext.dependencies["permissionsdispatcher"]
    annotationProcessor rootProject.ext.dependencies["permissionsdispatcher-processor"]
    api rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    api rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide:compiler"]
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    implementation files('libs/xstream-1.4.7.jar')
    implementation files('libs/jcifs-1.3.19.jar')
    implementation files('libs/commons-net-ftp-2.0.jar')
    implementation files('libs/ftpserver-core-1.0.6.jar')
    implementation files('libs/log4j-1.2.14.jar')
    implementation files('libs/mina-core-2.0.4.jar')
    implementation files('libs/slf4j-api-1.5.2.jar')
    implementation files('libs/slf4j-log4j12-1.5.2.jar')
    implementation 'org.jetbrains:annotations:15.0'
    implementation 'com.liulishuo.filedownloader:library:1.7.6'
    testImplementation 'junit:junit:4.12'
}
